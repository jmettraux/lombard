#!/usr/bin/env ruby

require 'rubygems'
require 'bundler/setup'


$: << 'lib'
require 'lombard'

argh = {}
arga = []
  #
loop do
  a = ARGV.shift; break unless a
  k = a; k = k[1..-1] while k[0, 1] == '-'
  case a
  when '-d', '--dir' then argh[k] = ARGV.shift
  when /^-[a-zA-Z]$/ then argh[k] = true
  when /^--[-a-zA-Z]+$/ then argh[k] = true
  else arga << a
  end
end

#puts "-" * 80
#p argh
#p arga
#puts "-" * 80

if argh['v'] || argh['version']
  puts "lombard #{Lombard::VERSION}"
  exit 0
end

if argh['h'] || argh['help']
  puts
  puts $0
  puts
  puts "  #{$0} rota"
  puts "  #{$0} -d rota"
  puts "    #==> outputs value list for \"La Table Ronde\""
  puts
  puts "  #{$0} wog"
  puts "  #{$0} -d wog"
  puts "    #==> outputs value list for \"Wolves of God\""
  puts
  puts "  #{$0} gurps"
  puts "  #{$0} -d gurps"
  puts "    #==> outputs value list for \"Gurps Medieval\""
  puts
  puts "  #{$0} rota food"
  puts "    #==> outputs list for \"La Table Ronde\" food items"
  puts "  #{$0} rota ood fabric"
  puts "    #==> outputs list for \"La Table Ronde\" food, good, and fabric"
  puts "  #{$0} rota weap"
  puts "    #==> outputs list for \"La Table Ronde\" weapons"
  puts
  puts "  #{$0} wog food /i/"
  puts "    #==> outputs list for WOG food items with an 'i'"
  puts "  #{$0} wog \"/sword|weapon/\""
  puts "    #==> outputs list for WOG of swords or weapons"
  puts
  puts "  #{$0} --all \"/sword|weapon/\""
  puts "    #==> outputs list for all lists of swords or weapons"
  puts
  puts "  #{$0} wog -R"
  puts "    #==> outputs list for WOG but without wages reference"
  puts
  exit 0
end


def is_dir?(path)
  path && File.directory?(path) && Dir[File.join(path, '*.csv')].any?
end

ds = Dir['var/*'].select { |pa| is_dir?(pa) }.sort

if argh['a'] || argh['all']
else
  d0 = argh['d'] || arga.shift
  d = d0
  d = "var/#{d}" unless is_dir?(d)
  d = Dir["var/*#{d0}*"].sort.first unless is_dir?(d)
  d = ds.first unless is_dir?(d)
  ds = [ d ]
end

ds.each_with_index do |d, i|

  puts if i == 0
  puts "/// #{d}"

  l = Lombard.new(d)

  if argh['c'] || argh['coins']
    puts l.coins.to_s
    exit 0
  end

  ref = argh['ref'] || argh['r'] || 'wages'
  ref = nil if argh['R']

  rexes, cats = arga.partition { |e| e.match?(/^\/.+\/$/) }
  rexes = rexes.collect { |e| e[1..-2] }

  if argh['csv'] || argh['c']
    puts l.to_csv(ref: ref, cats: cats, rexes: rexes)
  else
    puts l.to_table(ref: ref, cats: cats, rexes: rexes)
  end

  puts
end

